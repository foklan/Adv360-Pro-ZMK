#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
        };

        lth: layer_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none    &kp N1      &kp N2          &kp N3            &kp N4       &kp N5  &kp CAPSLOCK                                                           &mo 3             &kp N6  &kp N7          &kp N8             &kp N9          &kp N0                   &none
&none    &kp Q       &kp W           &kp E             &kp R        &kp T   &none                                                                  &none             &kp Y   &kp U           &kp I              &kp O           &kp P                    &none
&kp ESC  &hm LGUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G   &none         &kp ESCAPE  &kp LALT        &kp PAGE_UP    &kp DEL       &tog 4            &kp H   &hm RCTRL J     &hm RIGHT_SHIFT K  &hm LEFT_ALT L  &hm RIGHT_GUI SEMICOLON  &kp ESC
&none    &kp Z       &kp X           &kp C             &kp V        &kp B                             &kp HOME        &kp PAGE_DOWN                                  &kp N   &kp M           &kp COMMA          &kp DOT         &kp FSLH                 &kp RSHFT
&mo 2    &none       &none           &kp LEFT          &kp RIGHT            &lth 5 SPACE  &lth 1 TAB  &kp ESCAPE      &kp ESCAPE     &lth 1 ENTER  &lth 5 BACKSPACE          &kp DOWN_ARROW  &kp UP_ARROW       &none           &none                    &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                        &mo 3      &kp N6  &kp KP_NUM      &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                         &none      &kp Y   &kp KP_N7       &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none      &kp LCTRL  &kp LEFT_ALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4       &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                         &kp HOME          &kp PG_UP                        &kp N   &kp KP_N1       &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp SPACE  &kp TAB    &kp END           &kp PG_DN  &kp ENTER  &kp KP_N0          &kp DOWN_ARROW  &kp UP_ARROW  &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                          &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                           &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &kp K_MUTE       &kp C_MUTE             &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                           &kp C_VOLUME_UP        &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &kp PRINTSCREEN  &kp C_VOLUME_DOWN      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        gaming {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &trans                                           &trans     &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E   &kp R   &kp T   &trans                                           &trans     &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S   &kp D   &kp F   &kp G   &trans     &trans    &trans      &trans  &trans  &trans     &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp APOS
&kp LSHFT  &kp Z      &kp X   &kp C   &kp V   &kp B                        &trans      &trans                     &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL  &kp GRAVE  &trans  &trans  &kp M           &kp SPACE  &kp BSPC  &trans      &trans  &trans  &kp ENTER          &trans  &trans     &kp LBKT  &kp RBKT  &kp LCTRL
            >;
        };

        symbols {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND             &kp DOLLAR             &kp PERCENT  &none                                       &none   &kp CARET  &kp AMPERSAND   &kp ASTERISK      &none          &none              &none
&none  &kp TILDE        &none        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none        &none                                       &none   &none      &kp UNDERSCORE  &kp PLUS          &kp PIPE       &kp DOUBLE_QUOTES  &none
&none  &kp GRAVE        &none        &kp LEFT_BRACE        &kp RIGHT_BRACE        &none        &none   &trans  &trans      &trans  &trans  &none   &none      &kp MINUS       &kp SINGLE_QUOTE  &kp BACKSLASH  &kp SINGLE_QUOTE   &none
&none  &none            &none        &kp LBKT              &kp RBKT               &none                        &trans      &trans                  &none      &none           &none             &none          &none              &none
&none  &none            &none        &trans                &trans                              &trans  &trans  &trans      &trans  &trans  &trans             &trans          &trans            &none          &none              &none
            >;
        };
    };
};
